#!/usr/bin/env node

var mqtt = require('../lib/mqtt');

var argv = process.argv;

var port, host, username, password, topic, ssl = false;
var args_to_delete = [];
for (var i = 2; i < argv.length; i++) {
	if(!argv[i]) process.exit(-1);
    if (argv[i] == "-ssl") {
        args_to_delete.push(i);
        ssl = true;
    }
}
for (var i in args_to_delete) {
    argv.splice(args_to_delete[i], 1);
}

if (argv.length == 5) {
    port = argv[2];
    host = argv[3];
    username = "";
    password = "";
    topic = argv[4];
} else if (argv.length == 7) {
    port = argv[2];
    host = argv[3];
    username = argv[4];
    password = argv[5];
    topic = argv[6];
} else {
    process.exit(-1);
}

mqtt.createClient(port, host, {ssl: ssl}, function(client) {
    var opts = {keepalive: 3000};
    if (username != "")
        opts.username = username;
    if (password != "")
        opts.password = password;
    client.connect(opts);

	client.on('connack', function(packet) {
		if (packet.returnCode === 0) {
		    client.subscribe({topic: topic});
		} else {
			console.log('connack error %d', packet.returnCode);
			process.exit(-1);
		}
	});

	client.on('publish', function(packet) {
		console.log('%s\t%s', packet.topic, packet.payload);
	});

	client.on('close', function() {
		process.exit(0);
	});

	client.on('error', function(e) {
		console.log('error %s', e);
		process.exit(-1);
	});
});
